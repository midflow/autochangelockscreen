<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutMe" xml:space="preserve">
    <value>About Me</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Lock Screen</value>
  </data>
  <data name="AutoChange" xml:space="preserve">
    <value>Auto Change</value>
  </data>
  <data name="BirdYear" xml:space="preserve">
    <value>1982</value>
  </data>
  <data name="Blog" xml:space="preserve">
    <value>mid-news.com</value>
  </data>
  <data name="BuyApp" xml:space="preserve">
    <value>Buy App</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChooseSource" xml:space="preserve">
    <value>Choose Source</value>
  </data>
  <data name="ClickNo" xml:space="preserve">
    <value>Background cant be updated as you clicked no!!</value>
  </data>
  <data name="CompletedDownloading" xml:space="preserve">
    <value>Completed downloading.</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DefaultImages" xml:space="preserve">
    <value>Default Images</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading.... please wait...</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>lttrungbk@yahoo.com</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="FlickerIntro" xml:space="preserve">
    <value>Please write your tag of images you want to show at lock screen from Flicker.</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpDefault" xml:space="preserve">
    <value>Follow these steps:  
1. Select "Default" button
2. You will see the default images
3. Press Start Button to start set wallpaper with the first image
4. Choose "Yes" if the App request your permission.</value>
  </data>
  <data name="HelpRss" xml:space="preserve">
    <value>1. Touch Your photos
 2. Touch Add Button to download images
3. Write your tag you want to download
 4. Touch Show images to see images
 5. Touch Download to download images
6. Touch Finished button when downloading is finished
7. Select images and press Remove if you want to remove images
8. Click start button to start
 9. Click Yes when being requested</value>
  </data>
  <data name="HelpYours" xml:space="preserve">
    <value>1. Touch Your photos
 2. Touch Add Button to add new Image
3. Select from library or take a picture
 4. Crop as you want
 5. Repeat with others images
 6. Select images and press Remove if you want to remove images
7. Touchstart button to start
 8. Touch Yes when being requested</value>
  </data>
  <data name="ImageSource" xml:space="preserve">
    <value>Image Source</value>
  </data>
  <data name="IntervalTime" xml:space="preserve">
    <value>Interval time</value>
  </data>
  <data name="IntroMySelf" xml:space="preserve">
    <value>Thanks so much for your supports. If you like this app, Rate it 5 star and recomment other to use it. If you have any suggestion, send it to lttrungbk@yahoo.com. Thanks!</value>
  </data>
  <data name="LoadImages" xml:space="preserve">
    <value>Load Images</value>
  </data>
  <data name="LockScreenChanged" xml:space="preserve">
    <value>Lock screen changed. Go to lock screen.</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="MyApps" xml:space="preserve">
    <value>My Apps</value>
  </data>
  <data name="myfacebook" xml:space="preserve">
    <value>My Facebook</value>
  </data>
  <data name="MyName" xml:space="preserve">
    <value>Le Thanh Trung</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Vietnam</value>
  </data>
  <data name="NoImageFoundForTag" xml:space="preserve">
    <value>No image found for tag</value>
  </data>
  <data name="NoNetwork" xml:space="preserve">
    <value>No network is available..</value>
  </data>
  <data name="NumberOfImages" xml:space="preserve">
    <value>Number of images</value>
  </data>
  <data name="PleaseTryOtherTag" xml:space="preserve">
    <value>Please try other tag name for image.</value>
  </data>
  <data name="PleaseWriteTag" xml:space="preserve">
    <value>Please write your tag in textbox of images you want to show on lock screen</value>
  </data>
  <data name="RateIt" xml:space="preserve">
    <value>Rate It</value>
  </data>
  <data name="Resize" xml:space="preserve">
    <value>Resize</value>
  </data>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>vi</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="Rss" xml:space="preserve">
    <value>RSS</value>
  </data>
  <data name="SetSource" xml:space="preserve">
    <value>Set Source</value>
  </data>
  <data name="ShowImages" xml:space="preserve">
    <value>Show Images</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="YourPhotos" xml:space="preserve">
    <value>Your Photos</value>
  </data>
</root>